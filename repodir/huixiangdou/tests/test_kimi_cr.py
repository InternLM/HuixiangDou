###### 测试不需要消解的情况
prompt1 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
路人甲：“Error:Out of memory - process killed”
路人乙：“待会儿试试”
路人丙：“完成和优秀有什么区别？”

输入内容：
“请问今天天气如何？”，指代消解后的结果是？

输出格式：
直接告诉我消解后的文本，如果不需要消解就返回原本的输入，不要解释原因。
"""
# “请问今天天气如何？”
# “请问今天天气如何？” 在这个群聊场景中，由于没有上下文信息表明“今天天气如何”与之前的对话有关，因此不需要进行指代消解，直接返回原本的输入。

# 增加返回
prompt2 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
路人甲：“Error:Out of memory - process killed”
路人乙：“待会儿试试”
路人丙：“完成和优秀有什么区别？”

输入内容：
“请问今天天气如何？”，指代消解后的结果是？

输出格式：
直接告诉我消解后的文本，如果不需要消解就返回空白，不要解释原因。
"""
# 空白
# 返回空白。

####### 测试需要消解的情况
prompt3 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
路人甲：“Error:Out of memory - process killed”
路人乙：“待会儿试试”
路人丙：“完成和优秀有什么区别？”

输入内容：
“给的证书不一样”，指代消解后的结果是？如果不需要消解就返回空白。
"""
# 完成和优秀的区别

prompt4 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
A:“Error:Out of memory - process killed”
B:“待会儿试试”
C:“完成和优秀有什么区别？”

B:“给的证书不一样”，指代消解后的结果是？如果不需要消解就返回空白。直接返回消解结果不要解释
"""
# 完成和优秀的区别

prompt5 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
[{
    "username": "A", "content":"Error:Out of memory - process killed"
},
{
    "username": "B", "content":"待会儿试试"
},
{
    "username": "C", "content":"学员的成绩评价完成和优秀有什么区别？"
},
{
    "username": "D", "content":"平菇炖肉好吃"
}]

输入内容：
{
    "username": "D", "content":"给的证书不一样"
}
content 指代消解后的结果是？如果不需要消解就返回空白。直接返回消解后的完整文本不要解释
"""

prompt5 = """
请完成群聊场景中的指代消解任务。

群描述：这是一个 LLM 课程助教群，助教会把学员的疑问转发到本群。

以下是本群的历史对话，包含多个人的发言：
路人甲：“Error:Out of memory - process killed”
路人乙：“待会儿试试”
路人丙：“完成和优秀有什么区别？”
路人丁：“平菇适合炖肉”
路人甲：“明天去野餐去吧”

输入内容：
“给的证书不一样”，指代消解后的结果是？直接告诉我消解后的文本，如果不需要消解就返回原本的输入，不要解释原因。
"""

# 原本的输入内容“给的证书不一样”在这个对话上下文中并没有明确的指代对象，因此不需要进行指代消解，返回原本的输入：
# “给的证书不一样”

######## conclusion
# 何时触发消解，NLP 预筛还是每句都过
# resp 需要 unquote + 文本近似 / concat
# kimi 指令跟随能力很好，对格式并不敏感，简单的 "A:内容\n" 即可
